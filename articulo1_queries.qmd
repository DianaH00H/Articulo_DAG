---
title: "Articulo 1: Queries"
authors:
  - name: Jorge Nevarez - A01645313
  - name: Alfredo Lopez - A01638976
  - name: Damian Luna - A01645865
  - name: Diana Hernandez - A01639515
format: html
editor: visual
---

```{r}
set.seed(1234) 
library(bnlearn)
```

```{r}
data = read.csv('data/base_unida.csv',stringsAsFactors = TRUE)
```

```{r}
head(data)
```

```{r}
# Variables categóricas
vars_factor <- c("tra_sexo", "via_p5_13", "tra_p5_14",
                 "tra_p5_3", "tra_estrato", "tra_p5_17_1c",
                 "via_p5_6", "via_p5_11a", "via_p5_14_18")
data[vars_factor] <- lapply(data[vars_factor], as.factor)

# Crear variable binaria de duración (>1 hora)
data$dur_60 <- ifelse(data$tra_p5_16_1_1 > 1, "Mayor_1h", "Menor_igual_1h")
data$dur_60 <- factor(data$dur_60)

# Variables derivadas de tra_p5_14 siendo estas: Automovil, Motorizado, modo_ok
data$automovil <- ifelse(data$tra_p5_14 == 1, "Automovil", "No_Automovil") #saber si utiliza automovil
data$automovil <- factor(data$automovil)

data$motorizado <- ifelse(data$tra_p5_14 %in% 
                            c(1,2,3,4,5,6,8,9,10,11,12,13,15,17,18,19,20), 
                          "Motorizado", "No_motorizado") #saber si utiliza un vehiculo motorizado para viajar o no
data$motorizado <- factor(data$motorizado)

data$modo_ok <- ifelse(data$tra_p5_14 %in% c(6,12,13),
                       as.character(data$tra_p5_14), "Otro") #identificar si utiliza transporte publico u otro vehiculo
data$modo_ok <- factor(data$modo_ok)

# Eliminar la columna original para evitar conflictos
data$tra_p5_14 <- NULL
data$tra_p5_16_1_1 <- NULL

```

```{r}
# Renombrar columnas para evitar errores
names(data)[names(data) == "tra_sexo"]     <- "sexo"
names(data)[names(data) == "via_p5_13"]    <- "acto_religioso"
names(data)[names(data) == "tra_estrato"]  <- "estrato_alto"
names(data)[names(data) == "tra_p5_17_1c"] <- "st_cuauh"
names(data)[names(data) == "tra_p5_3"]     <- "es_sabado"
names(data)[names(data) == "via_p5_6"]     <- "origen"
names(data)[names(data) == "via_p5_11a"]   <- "destino"
names(data)[names(data) == "via_p5_14_18"] <- "transporte_escolar"

head(data)
```

## DAG 1

```{r}
nodes <- c("sexo", "acto_religioso", "automovil", 
           "modo_ok", "motorizado", "dur_60", 
           "es_sabado", "estrato_alto")
dag <- empty.graph(nodes = nodes)

arc_set <- matrix(c(
  "sexo", "automovil",
  "acto_religioso", "automovil",
  
  "sexo", "modo_ok",
  "estrato_alto", "modo_ok",
  "es_sabado", "modo_ok",
  "acto_religioso", "modo_ok",
  
  "automovil", "motorizado",
  "modo_ok", "motorizado",
  
  "motorizado", "dur_60",
  "acto_religioso", "dur_60",
  "es_sabado", "dur_60"
), byrow = TRUE, ncol = 2,
dimnames = list(NULL, c("from", "to")))

arcs(dag) <- arc_set
```

```{r}
graphviz.plot(dag, shape = "ellipse")

```

```{r}
datos <- na.omit(data[, nodes])

bn_dag1 <- bn.fit(dag, data = datos, method = "mle")
```

```{r}
data_clean <- na.omit(data)
score(dag, data = datos, type = "bic")
score(dag, data = datos, type = "aic")
```

```{r}
arc.strength(dag, data = datos, criterion = "mi")
```

## DAG 2

```{r}
dag_2 <- empty.graph(nodes = c("sexo", "acto_religioso", "automovil", "motorizado",
                               "dur_60", "es_sabado", "estrato_alto", "modo_ok",
                               "origen", "destino", "transporte_escolar", "st_cuauh"))

```

```{r}
arc_set_2 <- matrix(c(
  "sexo", "automovil",
  "estrato_alto", "automovil",
  "acto_religioso", "automovil",
  "es_sabado", "automovil",
  "origen", "automovil",
  "destino", "automovil",
  
  "origen", "modo_ok",
  "destino", "modo_ok",
  "es_sabado", "modo_ok",
  "estrato_alto", "modo_ok",
  
  "automovil", "motorizado",
  "modo_ok", "motorizado",
  
  "estrato_alto", "transporte_escolar",
  "origen", "transporte_escolar",
  "destino", "transporte_escolar",
  
  "origen", "dur_60",
  "destino", "dur_60",
  "modo_ok", "dur_60",
  "automovil", "dur_60",
  "motorizado", "dur_60",
  "transporte_escolar", "dur_60"
), byrow = TRUE, ncol = 2,
dimnames = list(NULL, c("from", "to")))
```

```{r}
arcs(dag_2) = arc_set_2
graphviz.plot(dag_2, shape = "ellipse")
```

```{r}
bn_2 = bn.fit(dag_2, data = data)
```

```{r}
data_clean <- na.omit(data)
score(dag_2, data = data_clean, type = "bic")
score(dag_2, data = data_clean, type = "aic")
```

```{r}
arc.strength(dag_2, data = data, criterion = "mi")
```

Tras realizar la fuerza de dependencia probabilista obtuvimos los siguientes resultados:

\begin{aligned}
& \text{automovil} \perp\!\!\!\perp \text{sexo} : 1.0000000 \\
& \text{automovil} \perp\!\!\!\perp \text{estrato\_alto} : 0.0147075 \\
& \text{automovil} \perp\!\!\!\perp \text{acto\_religioso} : 1.0000000 \\
& \text{automovil} \perp\!\!\!\perp \text{es\_sabado} : 1.0000000 \\
& \text{automovil} \perp\!\!\!\perp \text{origen} : 1.0000000 \\
& \text{automovil} \perp\!\!\!\perp \text{destino} : 1.0000000 \\
& \text{modo\_ok} \perp\!\!\!\perp \text{origen} : 1.0000000 \\
& \text{modo\_ok} \perp\!\!\!\perp \text{destino} : 1.0000000 \\
& \text{modo\_ok} \perp\!\!\!\perp \text{es\_sabado} : 1.0000000 \\
& \text{modo\_ok} \perp\!\!\!\perp \text{estrato\_alto} : 1.0000000 \\
& \text{motorizado} \perp\!\!\!\perp \text{automovil} : 0.0000000 \\
& \text{motorizado} \perp\!\!\!\perp \text{modo\_ok} : 0.0000000 \\
& \text{transporte\_escolar} \perp\!\!\!\perp \text{estrato\_alto} : 0.9999994 \\
& \text{transporte\_escolar} \perp\!\!\!\perp \text{origen} : 0.0000000 \\
& \text{transporte\_escolar} \perp\!\!\!\perp \text{destino} : 0.0000000 \\
& \text{dur\_60} \perp\!\!\!\perp \text{origen} : 1.0000000 \\
& \text{dur\_60} \perp\!\!\!\perp \text{destino} : 9.981721 \times 10^{-109} \\
& \text{dur\_60} \perp\!\!\!\perp \text{modo\_ok} : 1.0000000 \\
& \text{dur\_60} \perp\!\!\!\perp \text{automovil} : 1.0000000 \\
& \text{dur\_60} \perp\!\!\!\perp \text{motorizado} : 1.0000000 \\
& \text{dur\_60} \perp\!\!\!\perp \text{transporte\_escolar} : 1.0000000
\end{aligned}

Dados estos resultados podriamos eliminar los siguientes arcos ya que superan 0.05 haciendolos no significativos:

\begin{aligned}
& \text{sexo} \to \text{automovil}\\
& \text{acto\_religioso} \to\text{automovil}\\
& \text{es\_sabado} \to \text{automovil}\\
& \text{origen} \to \text{automovil}\\
& \text{destino} \to \text{automovil}\\
& \text{origen} \to \text{modo\_ok}\\
& \text{destino} \to \text{modo\_ok}\\
& \text{es\_sabado} \to \text{modo\_ok}\\
& \text{estrato\_alto} \to \text{modo\_ok} \\
& \text{estrato\_alto} \to \text{transporte\_escolar} \\
& \text{origen} \to \text{dur\_60}\\
& \text{modo\_ok} \to \text{dur\_60} \\
& \text{automovil} \to \text{dur\_60} \\
& \text{motorizado} \to \text{dur\_60} \\
& \text{transporte\_escolar} \to \text{dur\_60}
\end{aligned}

## DAG 3

```{r}
dag_3 = empty.graph(nodes = c('sexo',
'acto_religioso',
'automovil',
'motorizado',
'dur_60',
'es_sabado',
'estrato_alto',
'modo_ok',
'st_cuauh',
'origen',
'destino',
'transporte_escolar'
))
```

```{r}
arc_set = matrix(c('sexo', 'destino',
                   'sexo', 'automovil',
                   'estrato_alto', 'destino',
                   'estrato_alto', 'origen',
                   'estrato_alto', 'st_cuauh',
                   'estrato_alto', 'automovil',
                   'estrato_alto', 'modo_ok',
                   'acto_religioso', 'destino',
                   'acto_religioso', 'automovil',
                   'destino', 'es_sabado',
                   'destino', 'automovil',
                   'destino', 'motorizado',
                   'destino', 'transporte_escolar',
                   'origen', 'st_cuauh',
                   'origen', 'modo_ok',
                   'automovil', 'dur_60',
                   'motorizado', 'dur_60',
                   'modo_ok', 'dur_60'),byrow = TRUE, ncol = 2,
                 dimnames = list(NULL, c('from', 'to')))

arcs(dag_3) = arc_set
dag_3

```

```{r}
graphviz.plot(dag_3, shape = "ellipse")
```

## Red Bayesiana

```{r}
bn_mle = bn.fit(dag_3, data=data, method = 'mle')
```

```{r}
bn_mle
```

Probamos la significancia de las relaciones

```{r}
data_clean <- na.omit(data)
score(dag_3, data = data_clean, type = "bic")
score(dag_3, data = data_clean, type = "aic")
```

```{r}
arc.strength(dag_3, data = data_clean, criterion = "mi")
```

### Independencias (arcos no significativos)

$$
\begin{aligned}
& \text{sexo} \perp\!\!\!\perp \text{automovil} : 1.0000000 \\
& \text{estrato\_alto} \perp\!\!\!\perp \text{automovil} : 1.0000000 \\
& \text{acto\_religioso} \perp\!\!\!\perp \text{automovil} : 1.0000000 \\
& \text{destino} \perp\!\!\!\perp \text{automovil} : 1.0000000 \\
& \text{destino} \perp\!\!\!\perp \text{motorizado} : 1.0000000 \\
& \text{automovil} \perp\!\!\!\perp \text{dur\_60} : 1.0000000 \\
& \text{motorizado} \perp\!\!\!\perp \text{dur\_60} : 1.0000000 \\
\end{aligned}
$$

### Dependencias (arcos significativos)

$$
\begin{aligned}
& \text{sexo} \not\!\perp\!\!\!\perp \text{destino} : 8.65\times 10^{-163} \\
& \text{estrato\_alto} \not\!\perp\!\!\!\perp \text{destino} : 3.40\times 10^{-80} \\
& \text{estrato\_alto} \not\!\perp\!\!\!\perp \text{origen} : 1.84\times 10^{-265} \\
& \text{estrato\_alto} \not\!\perp\!\!\!\perp \text{st\_cuauh} : 6.67\times 10^{-313} \\
& \text{estrato\_alto} \not\!\perp\!\!\!\perp \text{modo\_ok} : 1.29\times 10^{-28} \\
& \text{acto\_religioso} \not\!\perp\!\!\!\perp \text{destino} : 0.0000000 \\
& \text{destino} \not\!\perp\!\!\!\perp \text{es\_sabado} : 0.0000000 \\
& \text{destino} \not\!\perp\!\!\!\perp \text{transporte\_escolar} : 3.27\times 10^{-69} \\
& \text{origen} \not\!\perp\!\!\!\perp \text{st\_cuauh} : 0.0000000 \\
& \text{origen} \not\!\perp\!\!\!\perp \text{modo\_ok} : 9.31\times 10^{-10} \\
& \text{modo\_ok} \not\!\perp\!\!\!\perp \text{dur\_60} : 7.90\times 10^{-05} \\
\end{aligned}
$$

### Hill climbing

```{r}

align_bn_and_data <- function(dag_obj, df) {
  stopifnot(all(nodes(dag_obj) %in% names(df)))
  d <- df[, nodes(dag_obj), drop = FALSE]


  for (v in names(d)) if (is.character(d[[v]])) d[[v]] <- factor(d[[v]])


  d <- droplevels(na.omit(d))

  # Detectar factores con <2 niveles observados previamente
  ok <- vapply(d, function(x) if (is.factor(x)) nlevels(x) >= 2 else TRUE, logical(1))
  bad_vars <- names(d)[!ok]

  if (length(bad_vars)) {
    message("Quitando de la DAG y de los datos por <2 niveles: ",
            paste(bad_vars, collapse = ", "))
    # Reducir DAG y data a los nodos "ok"
    keep <- setdiff(nodes(dag_obj), bad_vars)
    dag_obj <- subgraph(dag_obj, keep)
    d <- d[, keep, drop = FALSE]
  }

  list(dag = dag_obj, data = d)
}

```

```{r}
# Helper: prepara data para BN (quita NA y factores con <2 niveles)
prep_bn_data <- function(df, node_vec) {
  stopifnot(all(node_vec %in% names(df)))
  d <- df[, node_vec, drop = FALSE]
  for (v in names(d)) if (is.character(d[[v]])) d[[v]] <- factor(d[[v]])
  d <- droplevels(na.omit(d))
  ok <- vapply(d, function(x) if (is.factor(x)) nlevels(x) >= 2 else TRUE, logical(1))
  if (any(!ok)) {
    message("Se eliminan por <2 niveles: ", paste(names(d)[!ok], collapse = ", "))
    d <- d[, ok, drop = FALSE]
  }
  d
}
```

```{r}
nodes_hc <- c("sexo","acto_religioso","automovil","motorizado","dur_60",
              "es_sabado","estrato_alto","modo_ok","st_cuauh","origen",
              "destino","transporte_escolar")
nodes_hc <- intersect(nodes_hc, names(data))
datos_hc <- prep_bn_data(data, nodes_hc)

set.seed(1234)
best_dag <- hc(datos_hc, score = "bic")
modelstring(best_dag)

scores_hc <- c(
  BIC = score(best_dag, data = datos_hc, type = "bic"),
  AIC = score(best_dag, data = datos_hc, type = "aic")
)
scores_hc
```

```{r}
scores_tab <- list()
if (!exists("best_dag")) {
  nodes_hc <- c("sexo","acto_religioso","automovil","motorizado","dur_60",
                "es_sabado","estrato_alto","modo_ok","st_cuauh","origen",
                "destino","transporte_escolar")
  nodes_hc <- intersect(nodes_hc, names(data))
  datos_hc <- data[, nodes_hc, drop = FALSE]
  for (v in names(datos_hc)) if (is.character(datos_hc[[v]])) datos_hc[[v]] <- factor(datos_hc[[v]])
  datos_hc <- droplevels(na.omit(datos_hc))
  set.seed(1234)
  best_dag <- hc(datos_hc, score = "bic")
}
scores_tab[["HC"]] <- c(BIC = score(best_dag, data = datos_hc, type = "bic"),
                        AIC = score(best_dag, data = datos_hc, type = "aic"))

# DAG 1
if (exists("dag")) {
  a1 <- align_bn_and_data(dag, data)
  scores_tab[["DAG1"]] <- c(BIC = score(a1$dag, data = a1$data, type = "bic"),
                            AIC = score(a1$dag, data = a1$data, type = "aic"))
}

# DAG 2
if (exists("dag_2")) {
  a2 <- align_bn_and_data(dag_2, data)
  scores_tab[["DAG2"]] <- c(BIC = score(a2$dag, data = a2$data, type = "bic"),
                            AIC = score(a2$dag, data = a2$data, type = "aic"))
}

# DAG 3
if (exists("dag_3")) {
  a3 <- align_bn_and_data(dag_3, data)
  scores_tab[["DAG3"]] <- c(BIC = score(a3$dag, data = a3$data, type = "bic"),
                            AIC = score(a3$dag, data = a3$data, type = "aic"))
}

# Tabla ordenada por BIC (en bnlearn, mayor = mejor)
scores_df <- do.call(rbind, scores_tab)
scores_df[order(-scores_df[, "BIC"]), , drop = FALSE]
```

```{r}
# 1. Visualizar la DAG aprendida por Hill-Climbing
graphviz.plot(best_dag, shape = "ellipse", main = "DAG aprendida por Hill-Climbing")

# 2. Mostrar la estructura textual de la DAG
modelstring(best_dag)
```

# Aplicacion

## Query 1

¿Cuál es la probabilidad de que el automóvil sea el medio de transporte de un hombre, dado que su propósito de viaje es ir a un acto religioso?

```{r}
cpquery(bn_mle, 
  event = (automovil == "Automovil"), 
  evidence = (sexo == 1 & acto_religioso == 9), 
  n = 10^6
)
```

## Query 2

¿Cuál es la probabilidad de que un viaje con duración mayor a 60 minutos se realice en transporte motorizado versus un viaje con transporte no motorizado?

```{r}
# Probabilidad de que un viaje >60min sea motorizado
p_motorizado <- cpquery(
  bn_mle, 
  event = (motorizado == "Motorizado"),
  evidence = (dur_60 == "Mayor_1h"),
  n = 10^6
)

# Probabilidad de que un viaje >60min sea NO motorizado
p_no_motorizado <- cpquery(
  bn_mle, 
  event = (motorizado == "No_motorizado"),
  evidence = (dur_60 == "Mayor_1h"),
  n = 10^6
)

p_motorizado
p_no_motorizado


```

## Query 3

¿Cuál es la probabilidad de que el viaje del hogar a la escuela dure más de 60 minutos si la persona usa transporte escolar?

```{r}
q3 <- cpquery(bn_mle, 
              event = (dur_60 == "Mayor_1h"), 
              evidence = (transporte_escolar == "1"), n = 10^6)
q3
```

## Query 4

La query original planteada para el equipo fue:

“¿Qué probabilidad hay que una persona de Zacatecas de estrato alto haya utilizado transporte público (tren suburbano, tren ligero y autobús) durante los sábados?”

Sin embargo, al revisar la base de datos proporcionada (ttransporte de la Encuesta Origen-Destino 2017), se identificó que la información disponible corresponde exclusivamente a trayectos dentro de la Ciudad de México. En consecuencia, no es posible responder una pregunta que involucre directamente a un estado externo como Zacatecas, dado que dicha entidad no se encuentra representada en el conjunto de datos.

Para mantener la lógica y el espíritu de la consulta y analizar el comportamiento de individuos de estrato alto en relación con el transporte público y los días sábado; se decidió ajustar la query. En la versión modificada, se sustituyó la referencia a Zacatecas por la alcaldía Cuauhtémoc, que sí está representada en el dataset a través de los códigos de estaciones.

De este modo, la query final utilizada en el análisis fue:

¿Qué probabilidad hay que una persona de estrato alto haya subido al transporte público (tren suburbano, tren ligero y autobús) en una estación que corresponde a la alcaldía Cuauhtémoc durante los sábados?

```{r}
cpquery(
  bn_mle,
  event    = (modo_ok %in% c(6, 12, 13)),
  evidence = (estrato_alto == 4 & st_cuauh == 6 & es_sabado == 2),
  n = 10^6
)
```
